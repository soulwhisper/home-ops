---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  bootstrap:
    desc: Bootstrap Flux into a Kubernetes cluster
    cmds:
      # Install Flux
      - kubectl apply --server-side --kustomize {{.K8S_CLUSTER_DIR}}/bootstrap/flux
      # Install secrets and configmaps
      - sops --decrypt {{.K8S_CLUSTER_DIR}}/bootstrap/flux/age-key.sops.yaml | kubectl apply -f -
      - sops --decrypt {{.K8S_CLUSTER_DIR}}/flux/vars/cluster-secrets.sops.yaml | kubectl apply -f -
      - kubectl apply --server-side --filename {{.K8S_CLUSTER_DIR}}/flux/vars/cluster-settings.yaml
      # Install Flux Kustomization resources
      - kubectl apply --server-side --kustomize {{.K8S_CLUSTER_DIR}}/flux/config
    requires:
      vars:
        - K8S_CLUSTER
    preconditions:
      - sh: kubectl config get-contexts {{.K8S_CLUSTER}}
        msg: "Kubectl context {{.K8S_CLUSTER}} not found"
      - test -f $HOME/.config/age/keys.txt
      - test -f {{.K8S_CLUSTER_DIR}}/bootstrap/flux/age-key.sops.yaml
      - test -f {{.K8S_CLUSTER_DIR}}/flux/vars/cluster-settings.yaml
      - test -f {{.K8S_CLUSTER_DIR}}/flux/vars/cluster-secrets.sops.yaml
      - sops --decrypt {{.K8S_CLUSTER_DIR}}/bootstrap/flux/age-key.sops.yaml
      - sops --decrypt {{.K8S_CLUSTER_DIR}}/flux/vars/cluster-secrets.sops.yaml
      - kustomize build {{.K8S_CLUSTER_DIR}}/bootstrap/flux
      - kustomize build {{.K8S_CLUSTER_DIR}}/flux/config

  apply-ks:
    desc: Apply a Flux Kustomization resource for a cluster
    summary: |
      Args:
        PATH: Path to the Flux Kustomization resource (required)
        NAME: Name of the Flux Kustomization to apply (default: last segment of <PATH> variable)
        SRC: Path to the manifests location (default: Same as <PATH> variable)
        NS: Namespace the Flux Kustomization exists in (default: flux-system)
    vars:
      NS: '{{.NS | default "flux-system"}}'
      KS:
        sh: flux --namespace {{.NS}} get kustomizations {{base .PATH}} 2>&1
    cmd: >
      flux build --namespace {{.NS}} ks {{ if .NAME }}{{.NAME}}{{ else }}{{base .PATH}}{{ end }}
      --kustomization-file {{.K8S_CLUSTER_DIR}}/apps/{{.PATH}}/ks.yaml
      --path {{.K8S_CLUSTER_DIR}}/apps/{{.PATH}}{{- if .SRC }}/{{.SRC}}{{ end }}
      {{ if contains "not found" .KS }}--dry-run \{{ end }}
      | yq 'with(select(.apiVersion == "kustomize.toolkit.fluxcd.io/v1" and .kind == "Kustomization"); .metadata.namespace = "{{.NS}}")' -
      | kubectl apply --server-side --field-manager=kustomize-controller --filename -
    requires:
      vars:
        - K8S_CLUSTER
        - PATH
    preconditions:
      - sh: "test -f {{.K8S_CLUSTER_DIR}}/apps/{{.PATH}}/ks.yaml"

  delete-ks:
    desc: Delete a Flux Kustomization resource for a cluster
    summary: |
      Args:
        PATH: Path to the Flux Kustomization resource (required)
        NAME: Name of the Flux Kustomization to apply (default: last segment of <PATH> variable)
        SRC: Path to the manifests location (default: Same as <PATH> variable)
        NS: Namespace the Flux Kustomization exists in (default: flux-system)
    vars:
      NS: '{{.NS | default "flux-system"}}'
      KS:
        sh: flux --namespace {{.NS}} get kustomizations {{base .PATH}} 2>&1
    cmd: >
      flux build --namespace {{.NS}} ks {{ if .NAME }}{{.NAME}}{{ else }}{{base .PATH}}{{ end }}
      --kustomization-file {{.K8S_CLUSTER_DIR}}/apps/{{.PATH}}/ks.yaml
      --path {{.K8S_CLUSTER_DIR}}/apps/{{.PATH}}{{- if .SRC }}/{{.SRC}}{{ end }}
      {{ if contains "not found" .KS }}--dry-run \{{ end }}
      | yq 'with(select(.apiVersion == "kustomize.toolkit.fluxcd.io/v1" and .kind == "Kustomization"); .metadata.namespace = "{{.NS}}")' -
      | kubectl delete -f -
    requires:
      vars:
        - K8S_CLUSTER
        - PATH
    preconditions:
      - sh: "test -f {{.K8S_CLUSTER_DIR}}/apps/{{.PATH}}/ks.yaml"
